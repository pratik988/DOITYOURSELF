Assignment 2

Date : 23.02.2022
----------------------------

Array Based Programs
------------------------
7.Write a Java Program to find the Union of Two Arrays (UnSorted Array). 
9.Write a Java Program to find the Union of Tow Arrays using HashSet. 
13.Write a program to find the Most Frequent Element in an given array. 
15.Write a program to find the Most Frequent Element using HashTable.  
19.How to Swap two Strings without using third (temporary) variable? 
20.Write a java program to Reverse a String without using in-build function


1.Calculate the average of given array.
public class Main
{
	public static void main(String[] args) {
	    
	    int[] array={20,30,34,45,67};
	    int total=0;
	    for(int i =0;i<array.length;i++){
	        total=total+array[i];
	    }
	    
	   
	    System.out.println("Total is "+ total);
	    System.out.println("No of element is "+array.length);
	    System.out.println("Average is "+(total/(array.length)));
	}
}


2.Find the second largest number in the given array.

public class Main
{   public static void  Secondlargest(int arraylist[],int arraylength){
    
    
    int i, fst,snd;
    if(arraylength<2){
        System.out.println("inncrease no. of element");
    }
    
    
    fst=snd=0;
    for(i=0;i<arraylength;i++){
        if(arraylist[i]>fst){
        snd=fst;
        fst=arraylist[i];
    }
    
    /*for(i=0;i<arraylength;i++){
        if(arraylist[i]>fst){
        fst=arraylist[i];////only to find largest Value.
    }*/
        else if(arraylist[i]>snd && arraylist[i]!=fst)
        snd=arraylist[i];
    }
    
    System.out.println("Second largest No. is "+snd);
    System.out.println("First largest No. is "+snd);
}
	public static void main(String[] args) {
	    
	    int[] array={20,30,24,45,67,64,54};
	    int l=array.length;
	    Secondlargest(array,l);
	}
}

3.Find the second minimum number in the given array.

public class Main
{   public static void  Secondlargest(int arraylist[],int arraylength){
    
    
    int i, fst,snd;
    if(arraylength<2){
        System.out.println("inncrease no. of element");
    }
    
    
    fst=snd=Integer.MAX_VALUE;;
    for(i=0;i<arraylength;i++){
        if(arraylist[i]<fst){
        snd=fst;
        fst=arraylist[i];
    }
    
    /*for(i=0;i<arraylength;i++){
        if(arraylist[i]<fst){
        fst=arraylist[i];////only to find smallest Value.
    }*/
        else if(arraylist[i]<snd && arraylist[i]!=fst)
        snd=arraylist[i];
    }
    
    System.out.println("Second largest No. is "+snd);
}
	public static void main(String[] args) {
	    
	    int[] array={20,30,24,45,67,64,54};
	    int l=array.length;
	    Secondlargest(array,l);
	}
}

4.Find the missing Number in the given array of 1 to N.

public class Main
{
	public static void main(String[] args) {
		
		int[] arr={1, 2, 4, 5, 6};
		int n=arr.length+1;
		int sum = n * (n + 1) / 2;
		
		for(int i=0;i<arr.length;i++){
		    sum=sum-arr[i];
		    }
		System.out.println("Misssing element is "+sum);
	}
}

5.Write a Java Program to find the Intersection of two arrays.

public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1, 2, 4, 5, 6};
		int[] arr2={7, 8, 9,6,2};
		for(int i=0;i<arr1.length;i++){
		    for(int j=0;j<arr2.length;j++){
		        if(arr1[i]==arr2[j])
		        System.out.print(arr1[i]+",");
		    }
		}
	
	}
}

6.Write a Java Program to find the Intersection of Two Sorted arrays.

public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1,3,4,6,7,8};
		int[] arr2={1,2,3,4,5,6,7};
		int i=0,j=0;
		
		while(i<arr1.length && j<arr2.length){
		    if(arr1[i]<arr2[j])
		    i++;
		    else if(arr1[i]>arr2[j])
		    j++;
		    else{
		    System.out.print(arr2[j++]+" ");
		    i++;
		    }
		}
	}	
}

8.Write a Java Program to find the Union of Two Arrays (Sorted Arrays). 

public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1,3,4,6,7,8};
		int[] arr2={1,2,3,4,5,6,7};
		int i=0,j=0;
		
		while(i<arr1.length && j<arr2.length){
		    if(arr1[i]<arr2[j])
		    System.out.print(arr1[i++]+" ");
		    
		    else if(arr1[i]>arr2[j])
		
		    System.out.print(arr2[j++]+" ");
		    else{
		    System.out.print(arr2[j++]+" ");
		    i++;
		    }
		}
		
		while(i<arr1.length)
		System.out.print(arr1[i++]+" ");
		
		while(j<arr2.length)
		System.out.print(arr2[j++]+" ");
	}
}


10.Write a Java Program to Move all Zero to End of the Array. 
public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1,3,4,0,7,8,6,0,12,0,2,5};
		int n=arr1.length;
		int c=0;
		 for(int i=0;i<n;i++){
		    if( arr1[i]!=0)
		     arr1[c++]=arr1[i];
		 }
		 
		 while(c<n){
		 arr1[c]=0;
		 c++;
		 }
		 
		 for(int i =0;i<n;i++){
		     System.out.print(arr1[i]+" ,");
        }
		 
	}
	
}

11.Write a Java Program to Move all Zeros to Start of the Array.

public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1,3,4,0,7,8,6,0,12,0,2,5};
		int n=arr1.length-1;
		//int c=0;
		 for(int i=arr1.length-1;i>=0;i--){
		    if( arr1[i]!=0){
		        arr1[n]=arr1[i];
		        n--;
		    }
		     
		 }
		 
		 while(n>=0){
		 arr1[n]=0;
		 n--;
		 }
		 
		 for(int i =0;i<arr1.length;i++){
		     System.out.print(arr1[i]+" ,");
        }
		 
	}
	
}

12.Write a Java Program to Reverse the given array without using additional Array.

public class Main{
    
    static void reverse_arr(int a[],int n){
        int i,s,e;
        
        for(i=0;i<n/2;i++){
            e=a[i];
            a[i]=a[n-i-1];
            a[n-i-1]= e;
        }
        System.out.print("REsverse array is ");
        for(s=0;s<n;s++){
            System.out.print(a[s]+" ");
        }
        
    }
    public static void main (String[] args) {
        int[] arr={1,2,3,4,5};
        reverse_arr(arr,arr.length);
    }
}

14.Write a program to find the Most Frequent Element using Sorting.

import java.util.*;
 
class Main {
     
    static int Frequent(int arr[], int n)
    {
        Arrays.sort(arr);

        int max= 1;
        int res = arr[0];
        int curr = 1;
         
        for (int i = 1; i < n; i++)
        {
            if (arr[i] == arr[i - 1])
                curr++;
            else
            {
                if (curr > max)
                {
                    max = curr;
                    res = arr[i - 1];
                }
                curr = 1;
            }
        }
        
        if (curr > max)
        {
            max = curr;
            res = arr[n - 1];
        }
     
        return res;
    }
    public static void main (String[] args) {
         
        int arr[] = {1,4,5,3,2,1,5,4,4,4,2,1};
        int n = arr.length;
         
        System.out.println("Most frequent element is "+Frequent(arr,n));
         
    }
}

16.Write a java program to Rotate the Given Array d times.

class Main{    
 public static void main(String[] args) {    
        
        int [] arr = new int [] {1, 2, 3, 4, 5};
        int n = 3;  
        System.out.println("Given Original array: ");    
        for (int i = 0; i < arr.length; i++) {     
            System.out.print(arr[i] + " ");     
        }      
            
        for(int i = 0; i < n; i++){    
            int j;
            int last_element;    
               
            last_element = arr[arr.length-1];    
            
            for(j = arr.length-1; j > 0; j--){    
                arr[j] = arr[j-1];    
            }    
  
            arr[0] = last_element;    
        }    
        
            
        System.out.println("Array after right rotation: ");    
        for(int i = 0; i< arr.length; i++){    
            System.out.print(arr[i] + " ");    
        }    
    }    
}

17.Find the pair of elements(X+Y) in the array whose sum is equal to given number Z.

class Main{
  static boolean chkPair(int A[], int size, int x) {
      for (int i = 0; i < (size - 1); i++) {
          for (int j = (i + 1); j < size; j++) {
              if (A[i] + A[j] == x) {
                  System.out.println("Pair with a given sum " + x +
                                     " is (" + A[i] + ", " + A[j] + ")");
                                     
                                     return true;
              }
          }
      }
 
      return false;
  }
 
  public static void main(String [] args) {
     
      int A[] = {1,2,3,-5,-7};
      int x = -2;
      int size = A.length;
 
      if (chkPair(A, size, x)) {
          System.out.println("exists");
      }
      else {
          System.out.println("No pair exists for " + x );
      }
  }
}
18.Write a java program to check Given String is Palindrome or NOT.

public class Main{

    static boolean isPalindrome(String str)
    {
        int i = 0, j = str.length() - 1;
 
        while (i < j) {

            if (str.charAt(i) != str.charAt(j))
                return false;
                
            i++;
            j--;
        }
 
        return true;
    }

    public static void main(String[] args)
    {
        String str = "racecar";
 
        
        str = str.toLowerCase();
    
        if (isPalindrome(str))
 
            System.out.print("Yes");
        else
            System.out.print("No");
    }
}